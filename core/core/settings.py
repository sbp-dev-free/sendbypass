"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from .types import Stages

import os
import environ
from pathlib import Path

from datetime import timedelta
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ENV = environ.Env()
environ.Env.read_env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

STAGE = Stages[ENV.str('STAGE', 'PRODUCTION')]

if STAGE == Stages.PRODUCTION:
    DEBUG = False
    SECRET_KEY = ENV.str('SECRET_KEY', 'NONE')
    ALLOWED_HOSTS = ['127.0.0.1', ]
else:
    DEBUG = True
    SECRET_KEY = 'j0lt-jgydl6y6^+cjgvp_ykchfgq!6f(ogc@1cfw&-(e=+oh#m'

    ALLOWED_HOSTS = ['127.0.0.1',]

if 'ALLOWED_HOSTS' in ENV:
    try:
        hosts = json.loads(ENV.str('ALLOWED_HOSTS', '[]'))
        ALLOWED_HOSTS.extend(hosts)
    except Exception as e:
        print ('Could not load production hosts: {}'.format(e))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_mysql',
    'django_filters',
    'api.apps.ApiConfig',
    'drf_spectacular',
    'rest_framework',
    'corsheaders',
    'django_user_agents',
    'django_json_widget',
    'django_object_actions'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware'
]

ROOT_URLCONF = 'core.urls'
MEDIA_ROOT = 'files'
MEDIA_URL = '/files/'

STATIC_ROOT = 'api/static'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

CORS_ORIGIN_ALLOW_ALL = DEBUG

CORS_ALLOWED_ORIGINS = []

if 'ALLOWED_ORIGINS' in ENV:
    try:
        origins = json.loads(ENV.str('ALLOWED_ORIGINS', '[]'))
        CORS_ALLOWED_ORIGINS.extend(origins)
    except Exception as e:
        print ('Could not load allowed origins: {}'.format(e))

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

API_SETTINGS = {
    'DOMAIN': ENV.str('DOMAIN', 'sendbypass.com'),
    'EVENTS_SLACK_ENABLE': ENV.bool('SBP_EVENTS_SLACK_ENABLE', False),
    'EVENTS_SLACK_URL': ENV.str('SBP_EVENTS_SLACK_URL', ''),
    'VERIFY_EMAIL_RESEND_TIMEOUT': ENV.int('SBP_VERIFY_EMAIL_RESEND_TIMEOUT', 60)
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_SERVERS = {
    'default': {
        'HOST': ENV.str('EMAIL_HOST', "smtp.gmail.com"),
        'USER': ENV.str('EMAIL_HOST_USER', 'sendbypass@gmail.com'),
        'PASSWORD': ENV.str('EMAIL_HOST_PASSWORD', ''),
        'PORT': ENV.int('EMAIL_PORT', 25),
        'TLS': ENV.bool('EMAIL_TLS', False),
        'SENDER': ENV.str('EMAIL_FROM_ADDRESS', "Sendbypass<noreply@sendbypass.com>")
    },
    'noreply': {
        'HOST': ENV.str('NOREPLY_EMAIL_HOST', "smtp.gmail.com"),
        'USER': ENV.str('NOREPLY_EMAIL_HOST_USER', 'sendbypass@gmail.com'),
        'PASSWORD': ENV.str('NOREPLY_EMAIL_HOST_PASSWORD', ''),
        'PORT': ENV.int('NOREPLY_EMAIL_PORT', 25),
        'TLS': ENV.bool('NOREPLY_EMAIL_TLS', False),
        'SENDER': ENV.str('NOREPLY_EMAIL_FROM_ADDRESS', "Sendbypass<noreply@sendbypass.com>")
    },
    'info': {
        'HOST': ENV.str('INFO_EMAIL_HOST', "smtp.gmail.com"),
        'USER': ENV.str('INFO_EMAIL_HOST_USER', 'sendbypass@gmail.com'),
        'PASSWORD': ENV.str('INFO_EMAIL_HOST_PASSWORD', ''),
        'PORT': ENV.int('INFO_EMAIL_PORT', 25),
        'TLS': ENV.bool('INFO_EMAIL_TLS', False),
        'SENDER': ENV.str('INFO_EMAIL_FROM_ADDRESS', "Sendbypass<noreply@sendbypass.com>")
    }
}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': ENV.str('DATABASE_NAME', 'peybar'),
        'USER': ENV.str('DATABASE_USER', 'root'),
        'PASSWORD': ENV.str('DATABASE_PASS', '123456'),
        'HOST': ENV.str('DATABASE_HOST', 'localhost'),
        'PORT': ENV.int('DATABASE_PORT', 3306),
        'OPTIONS': {
        # Tell MySQLdb to connect with 'utf8mb4' character set
        'charset': 'utf8mb4',
        },
        'TEST': {
            'CHARSET': 'utf8mb4',
            'COLLATION': 'utf8mb4_unicode_ci',
        }
    },
}

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend', 'rest_framework.filters.OrderingFilter'),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework_simplejwt.authentication.JWTAuthentication',],
}

SBP = {
    'MEDIA_SYMLINK_ROOT': ENV.str('SBP_MEDIA_SYMLINK_ROOT', '/tmp/'),
    'RUN_IN_CONTAINER': ENV.bool('SBP_RUN_IN_CONTAINER', False),
    'CONTAINER_HOST_MEDIA_ROOT': ENV.str('SBP_CONTAINER_HOST_MEDIA_ROOT', '/tmp/files/'),
    'PROTECT_MEDIA_FILES': ENV.bool('SBP_PROTECT_MEDIA_FILES', False)
}


SPECTACULAR_SETTINGS = {
    "COMPONENT_SPLIT_REQUEST": True,
    "SCHEMA_COERCE_PATH_PK_SUFFIX": False,
    "SCHEMA_PATH_PREFIX": r"(/api/admin/)|(/api/)",
    "SWAGGER_UI_SETTINGS": {
        "persistAuthorization": True,
    },
    # other than that - only name, description
}

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'api.serializers.user.UserSerializer',
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=5),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": True,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,
    "TOKEN_OBTAIN_SERIALIZER": "api.serializers.user.CustomeTokenSerializer",
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '{name} {asctime} [{levelname:5.5}]  {message}',
            'style': '{'
        }
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue'
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': './sbp.log',
            'formatter': 'simple'
        },
        'request_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': './request.log',
            'formatter': 'simple'
        },
        'error_file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': './sbp_error.log',
            'formatter': 'simple'
        },
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'ERROR',
            'formatter': 'simple'
        },
    },
    'loggers': {
        '': {
            'handlers': ['error_file', 'console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'request': {
            'handlers': ['request_file',],
            'level': ENV.str('LOGGER_REQUEST_LEVEL', 'INFO'),
            'formatter': 'simple'
        }
    },
}


AUTH_USER_MODEL='api.User'

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GOOGLE_OAUTH2_CLIENT_SECRET = ENV.str('GOOGLE_OAUTH2_CLIENT_SECRET', "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")
GOOGLE_OAUTH2_CLIENT_ID = ENV.str('GOOGLE_OAUTH2_CLIENT_ID', "723765465110-mqimpvrp2519ar8ijss4u3srlm7gea4g.apps.googleusercontent.com")
GOOGLE_OAUTH2_PROJECT_ID = ENV.str('GOOGLE_OAUTH2_PROJECT_ID', "sendbypass-test")
BASE_BACKEND_URL = "https://api.sendbypass.com/"
REDIRECT_GOOGLE_URL = ENV.str('GOOGLE_REDIRECT_URL', 'https://sendbypass.com/check-auth')
